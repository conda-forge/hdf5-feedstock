From 76be1647cec69fcd75803d1b272fef0b5dcde866 Mon Sep 17 00:00:00 2001
From: Samuel Debionne <samuel.debionne@esrf.fr>
Date: Wed, 19 Mar 2025 08:47:18 +0100
Subject: [PATCH 03/10] avoid-test-execution-when-cross-compiling

---
 configure.ac | 20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)

diff --git a/configure.ac b/configure.ac
index d9147056c5..335bf36fd9 100644
--- a/configure.ac
+++ b/configure.ac
@@ -138,6 +138,9 @@ AC_SUBST([CPPFLAGS])
 AC_SUBST([JNIFLAGS])
 AC_SUBST([AR_FLAGS])
 
+AC_SUBST([cross_compiling])
+
+
 ## H5_CFLAGS (and company) are for CFLAGS that should be used on HDF5, but
 ## not exported to h5cc (or h5fc, etc.)
 ##
@@ -832,6 +835,7 @@ if test "X$HDF_FORTRAN" = "Xyes"; then
   MY_LDBL_DIG=0
 
   ## Macro to compare long double and __float128 to see which has higher precision
+  if test "$cross_compiling" = no; then
   PAC_FC_LDBL_DIG
 
   ## Set results
@@ -843,6 +847,7 @@ if test "X$HDF_FORTRAN" = "Xyes"; then
     PRECISION_TYPE="(long double)"
   fi
   AC_MSG_RESULT([$PAC_C_MAX_REAL_PRECISION $PRECISION_TYPE])
+  fi
 
   ## Store results in config file
   AC_SUBST([PAC_C_MAX_REAL_PRECISION])
@@ -967,6 +972,14 @@ if test "X$HDF_FORTRAN" = "Xyes"; then
     fi
   fi
 
+  if test "$cross_compiling" = yes; then
+  ## defines from aclocal_fc.m4, but require execution
+        AC_DEFINE_UNQUOTED([PAC_FC_MAX_REAL_PRECISION], $PAC_FC_MAX_REAL_PRECISION, [Define Fortran Maximum Real Decimal Precision])
+        AC_DEFINE_UNQUOTED([H5CONFIG_F_NUM_RKIND], $H5CONFIG_F_NUM_RKIND, [Define number of valid Fortran REAL KINDs])
+        AC_DEFINE_UNQUOTED([H5CONFIG_F_NUM_IKIND], $H5CONFIG_F_NUM_IKIND, [Define number of valid Fortran INTEGER KINDs])
+        AC_DEFINE_UNQUOTED([H5CONFIG_F_RKIND], $H5CONFIG_F_RKIND, [Define valid Fortran REAL KINDs])
+        AC_DEFINE_UNQUOTED([H5CONFIG_F_IKIND], $H5CONFIG_F_IKIND, [Define valid Fortran INTEGER KINDs])
+  else
   ## Check KIND and size of native integer
   PAC_FC_NATIVE_INTEGER
 
@@ -980,6 +993,7 @@ if test "X$HDF_FORTRAN" = "Xyes"; then
   ## Find all SIZEOFs for available KINDs
   PAC_FC_SIZEOF_INT_KINDS
   PAC_FC_SIZEOF_REAL_KINDS
+  fi
 
   AC_SUBST([PAC_FC_ALL_REAL_KINDS])
   AC_SUBST([PAC_FC_MAX_REAL_PRECISION])
@@ -1091,9 +1105,15 @@ if test "X$HDF_FORTRAN" = "Xyes"; then
   AC_MSG_RESULT([$PAC_FC_ALL_REAL_KINDS])
 
   dnl count the number of real kinds
+  if test -z "$H5CONFIG_F_NUM_RKIND"; then
   H5CONFIG_F_NUM_RKIND="INTEGER, PARAMETER :: num_rkinds = `echo \"[$]PAC_FC_ALL_REAL_KINDS\" |  tr -d -c ',\n' | awk '{ print length + 1; }'`"
+  fi
+  if test -z "$H5CONFIG_F_RKIND"; then
   H5CONFIG_F_RKIND="INTEGER, DIMENSION(1:num_rkinds) :: rkind = (/`echo $PAC_FC_ALL_REAL_KINDS | sed -e 's/{//g' | sed -e 's/}//g' | sed -e 's/ /,/g'`/)"
+  fi
+  if test -z "$H5CONFIG_F_RKIND_SIZEOF"; then
   H5CONFIG_F_RKIND_SIZEOF="INTEGER, DIMENSION(1:num_rkinds) :: rkind_sizeof = (/`echo $PAC_FC_ALL_REAL_KINDS_SIZEOF | sed -e 's/{//g' | sed -e 's/}//g'| sed -e 's/ /,/g'`/)"
+  fi
 
   AC_DEFINE_UNQUOTED([H5CONFIG_F_NUM_RKIND], $H5CONFIG_F_NUM_RKIND, [Define number of valid Fortran REAL KINDs])
   AC_DEFINE_UNQUOTED([H5CONFIG_F_RKIND], $H5CONFIG_F_RKIND, [Define valid Fortran REAL KINDs])
-- 
2.34.1

